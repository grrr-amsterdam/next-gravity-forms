"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _react=_interopRequireDefault(require("react")),_InputLabel=_interopRequireDefault(require("../FormElements/InputLabel"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(0<=b.indexOf(c))&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}var postcodeApi=require("postcode-nl").promises,_default=function(a){function b(){return c.apply(this,arguments)}function c(){return c=_asyncToGenerator(regeneratorRuntime.mark(function a(b){var c,d;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(f=b.target?b.target.value.toUpperCase():null,c){a.next=8;break}return a.next=4,L(f)["catch"](function(){c=!1});case 4:d=a.sent,d&&(c=!0,l({target:{value:f},street:d.street,city:d.city.label},e)),a.next=9;break;case 8:c=!1;case 9:case"end":return a.stop();}},a)})),c.apply(this,arguments)}var d=a.formValues,e=a.field,f=a.value,g=a.validationMessage,h=a.touched,i=a.setTouched,j=a.setErrorMessages,k=a.hideField,l=a.updateForm,m=a.styledComponents,n=a.error,o=a.unsetError,p=a.setFocusClass,q=a.cssClass,r=a.apiKeys,s=_objectWithoutProperties(a,["formValues","field","value","validationMessage","touched","setTouched","setErrorMessages","hideField","updateForm","styledComponents","error","unsetError","setFocusClass","cssClass","apiKeys"]),t=e.id,u=e.formId,v=e.type,w=e.label,x=e.placeholder,y=e.isRequired,z=e.description,A=e.descriptionPlacement,B=e.labelPlacement,C=e.width,D=e.customName,E=m||!1,F=E.Input,G=void 0===F?"input":F,H=E.Label,I=void 0===H?"label":H,J=E.Box,K=void 0===J?"div":J,L=function(a){var b={returnRateLimit:!0,apiKey:r.postcode},c={postcode:a};return new Promise(function(a,d){postcodeApi.getAddresses(b,c).then(function(b){a(b.result._embedded.addresses[0])})["catch"](function(a){d(a)})})};return _react["default"].createElement(K,{width:C,className:g&&h||n?"form-field error ".concat(q):"form-field ".concat(q),style:{display:k?"none":void 0}},_react["default"].createElement("div",{className:v},_react["default"].createElement(_InputLabel["default"],{formId:u,id:t,label:w,labelPlacement:B,isRequired:y,styledComponent:m}),"above"===A&&z&&_react["default"].createElement("div",{className:"description"},z),_react["default"].createElement(G,{id:"input_".concat(u,"_").concat(t),name:D||"input_".concat(t),type:v,value:f?f:"",placeholder:x,maxLength:6,required:y,onChange:function onChange(a){l(a,e),o(t)},onBlur:function onBlur(a){l(a,e),b(a),i(t),p(""!==f)},onFocus:function onFocus(){return p(!0)},"aria-label":w,"aria-describedby":"error_".concat(u,"_").concat(t),"aria-invalid":!!g&&h||!!n}),"above"!==A&&z&&_react["default"].createElement("div",{className:"description"},z),(g&&h||n)&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(u,"_").concat(t)},g||n)))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,